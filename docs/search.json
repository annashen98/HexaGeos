[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "",
    "text": "Harmful algal blooms (HABs), particularly cyanobacterial blooms (CBs), are among the most critical environmental issues facing inland water bodies. These blooms pose significant threats to global public health and aquatic ecosystem stability. Chaohu Lake, the fifth-largest freshwater lake in China, faces severe eutrophication and frequent CBs due to agricultural runoff, industrial, and domestic pollution.\nRemote sensing technology enables real-time detection and long-term monitoring of CBs. This study focuses on Chaohu Lake as a case study, aiming to quantify and visualize the occurrence of CBs in the region over the past decade, providing insights into the impact of human activities on water quality and ecosystem health.\n\n\nThis application addresses two key research questions:\n\nWhat is the spatial distribution of cyanobacterial blooms (CBs) in Chaohu Lake?\nWhat temporal patterns characterize the occurrence of CBs in Chaohu Lake?\n\nBy leveraging remote sensing technology and indices, the application provides a cost-effective, real-time solution for quantifying and visualizing CB occurrences, enabling a deeper understanding of their spatial and temporal dynamics to inform management strategies.\n\n\n\nThis application is designed to serve environmental researchers, policymakers, local authorities, and residents in the Chaohu Lake region.\nFor researchers, it provides real-time monitoring of cyanobacterial blooms (CBs), offering insights into their spatial distribution and temporal patterns, which are essential for scientific analysis and environmental management.\nFor policymakers and local authorities, the tool enables data-driven decision-making to implement effective mitigation strategies, allocate resources efficiently, and establish long-term action plans to address water quality challenges.\nFor residents, the application raises awareness about water quality issues and associated health risks, empowering communities to take measures and engage in sustainability efforts.\n\n\n\nThis application uses Sentinel-2 MSI imagery from the Google Earth Engine platform. The image collection spans from 2018 to 2020 and is filtered for cloud coverage under 20%. Additionally, vegetation and water indices such as MNDWI, FAI, and TI are derived for analysis.\n\n\n\nWe use median composites and custom cloud masking for preprocessing. Water bodies are extracted using MNDWI, and bloom areas are identified by combining FAI and TI thresholds. We calculate bloom area statistics, classify bloom severity, and compute the Spatial Distribution Frequency Index (SDFI) for spatial analysis.\n\n\n\nThe interactive interface of our web application is carefully designed to serve the distinct needs of researchers, policymakers, local authorities, and residents around Chaohu Lake. Each group can easily extract actionable insights from complex remote sensing data through the following features:\n\nFor environmental researchers:\nCustomizable map layers (VCI_Lv2–VCI_Lv6, FAI mean, SDFI, lake outline) allow in-depth analysis of spatial distribution and severity of cyanobacterial blooms. Dynamic area charts and a date slider help explore temporal trends and detect seasonal or event-based peaks. Point query and geometry import enable targeted analysis within specific lake regions.\nFor policymakers and local authorities:\nOne-click export tools provide daily, monthly, or yearly bloom statistics for efficient data collection and reporting. Clear legends and color-coded overlays facilitate rapid interpretation of bloom severity and spatial distribution, supporting evidence-based management. Layer switching and map navigation tools make it easy to compare changes over years or across different indicators.\nFor residents and the public:\nIntuitive controls for zooming, panning, and basemap switching ensure accessibility for all users. Simple legends and clickable locations offer immediate feedback on local bloom intensity, raising public awareness. Visualizing changes over time encourages community participation and supports grassroots environmental stewardship.\n\nIn summary, our interactive platform bridges the gap between technical satellite data and practical, real-world decision-making. By combining rich geospatial information with user-friendly design, the application empowers researchers, managers, and citizens to monitor, understand, and respond to cyanobacterial blooms in Lake Chaohu."
  },
  {
    "objectID": "index.html#project-summary",
    "href": "index.html#project-summary",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "",
    "text": "Harmful algal blooms (HABs), particularly cyanobacterial blooms (CBs), are among the most critical environmental issues facing inland water bodies. These blooms pose significant threats to global public health and aquatic ecosystem stability. Chaohu Lake, the fifth-largest freshwater lake in China, faces severe eutrophication and frequent CBs due to agricultural runoff, industrial, and domestic pollution.\nRemote sensing technology enables real-time detection and long-term monitoring of CBs. This study focuses on Chaohu Lake as a case study, aiming to quantify and visualize the occurrence of CBs in the region over the past decade, providing insights into the impact of human activities on water quality and ecosystem health.\n\n\nThis application addresses two key research questions:\n\nWhat is the spatial distribution of cyanobacterial blooms (CBs) in Chaohu Lake?\nWhat temporal patterns characterize the occurrence of CBs in Chaohu Lake?\n\nBy leveraging remote sensing technology and indices, the application provides a cost-effective, real-time solution for quantifying and visualizing CB occurrences, enabling a deeper understanding of their spatial and temporal dynamics to inform management strategies.\n\n\n\nThis application is designed to serve environmental researchers, policymakers, local authorities, and residents in the Chaohu Lake region.\nFor researchers, it provides real-time monitoring of cyanobacterial blooms (CBs), offering insights into their spatial distribution and temporal patterns, which are essential for scientific analysis and environmental management.\nFor policymakers and local authorities, the tool enables data-driven decision-making to implement effective mitigation strategies, allocate resources efficiently, and establish long-term action plans to address water quality challenges.\nFor residents, the application raises awareness about water quality issues and associated health risks, empowering communities to take measures and engage in sustainability efforts.\n\n\n\nThis application uses Sentinel-2 MSI imagery from the Google Earth Engine platform. The image collection spans from 2018 to 2020 and is filtered for cloud coverage under 20%. Additionally, vegetation and water indices such as MNDWI, FAI, and TI are derived for analysis.\n\n\n\nWe use median composites and custom cloud masking for preprocessing. Water bodies are extracted using MNDWI, and bloom areas are identified by combining FAI and TI thresholds. We calculate bloom area statistics, classify bloom severity, and compute the Spatial Distribution Frequency Index (SDFI) for spatial analysis.\n\n\n\nThe interactive interface of our web application is carefully designed to serve the distinct needs of researchers, policymakers, local authorities, and residents around Chaohu Lake. Each group can easily extract actionable insights from complex remote sensing data through the following features:\n\nFor environmental researchers:\nCustomizable map layers (VCI_Lv2–VCI_Lv6, FAI mean, SDFI, lake outline) allow in-depth analysis of spatial distribution and severity of cyanobacterial blooms. Dynamic area charts and a date slider help explore temporal trends and detect seasonal or event-based peaks. Point query and geometry import enable targeted analysis within specific lake regions.\nFor policymakers and local authorities:\nOne-click export tools provide daily, monthly, or yearly bloom statistics for efficient data collection and reporting. Clear legends and color-coded overlays facilitate rapid interpretation of bloom severity and spatial distribution, supporting evidence-based management. Layer switching and map navigation tools make it easy to compare changes over years or across different indicators.\nFor residents and the public:\nIntuitive controls for zooming, panning, and basemap switching ensure accessibility for all users. Simple legends and clickable locations offer immediate feedback on local bloom intensity, raising public awareness. Visualizing changes over time encourages community participation and supports grassroots environmental stewardship.\n\nIn summary, our interactive platform bridges the gap between technical satellite data and practical, real-world decision-making. By combining rich geospatial information with user-friendly design, the application empowers researchers, managers, and citizens to monitor, understand, and respond to cyanobacterial blooms in Lake Chaohu."
  },
  {
    "objectID": "index.html#the-application",
    "href": "index.html#the-application",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "The Application",
    "text": "The Application"
  },
  {
    "objectID": "index.html#how-it-works",
    "href": "index.html#how-it-works",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "How it Works",
    "text": "How it Works\n\n3.1 Data Processing\nIn this part, the code below defines Chaohu Lake’s rectangular study area, centers the map on it, filters Sentinel-2 images within a specific date range and cloud cover threshold, and creates a composite image for analysis.\n// define study area - Chaohu Lake\nvar chaohu = ee.Geometry.Polygon(\n  [[[117.220, 31.799],\n    [117.220, 31.387],\n    [117.937, 31.387],\n    [117.937, 31.799]]]);\n\n\n// set the center\nMap.centerObject(chaohu, 10);\n\n////////////////import data////////////////\n\n// set time range\nvar startDate = '2018-05-01';\nvar endDate = '2018-11-01';\n\n// import Sentinel-2 data and filter\nvar s2 = ee.ImageCollection('COPERNICUS/S2')\n  .filterBounds(chaohu)\n  .filterDate(startDate, endDate)\n  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))\n  \nvar compositeImage = s2.mosaic(); //Synthesize images within the same time period\n\n\n3.2 Remote Sensing Indices\nTo effectively identify cyanobacterial blooms, we calculate and apply three key remote sensing indices: 1. Modified Normalized Difference Water Index (MNDWI) Used to distinguish water bodies from land. It is calculated as: \\[\n\\text{MNDWI} = \\frac{\\rho_{\\text{green}} - \\rho_{\\text{swir}}}{\\rho_{\\text{green}} + \\rho_{\\text{swir}}}\n\\] where \\(\\rho_{\\text{Green}}\\) represents the reflectance of the green band (B3), and \\(\\rho_{\\text{SWIR}}\\) epresents the reflectance of the shortwave infrared band (B11).\n// Calculate MNDWI\nvar mndwi = medianComposite.normalizedDifference(['B3', 'B11']).rename('MNDWI');\n\nFloating Algae Index (FAI) Used to enhance the detection of floating algae by minimizing atmospheric effects. It is calculated as: \\[\n\\text{FAI} = \\rho_{\\text{nir}} - \\rho_{\\text{nir}}'\n\\] where \\(\\rho'_{\\text{NIR}}\\) is the baseline reflectance of the near-infrared band, calculated as: \\[\n\\rho_{\\text{nir}}' = \\rho_{\\text{red}} + (\\rho_{\\text{swir}} - \\rho_{\\text{red}}) \\times \\frac{\\lambda_{\\text{nir}} - \\lambda_{\\text{red}}}{\\lambda_{\\text{swir}} - \\lambda_{\\text{red}}}\n\\]\n\n// Calculate FAI\nvar nirPrime = red.add(\n  swir.subtract(red).multiply((833 - 664.5) / (1613.7 - 664.5))\n);\nvar fai = nir.subtract(nirPrime).rename('FAI');\n\nTurbidity Index (TI) The TI is used to eliminate the influence of highly turbid water bodies on the detection of cyanobacterial blooms. It is calculated as: \\[\nTI = \\rho_{red} - \\rho_{green} - \\left( \\frac{\\rho_{nir} - \\rho_{green}}{2} \\right)\n\\]\n\n// Calculate TI\nvar ti = red.subtract(green).subtract(\n  nir.subtract(green.multiply(0.5))\n).rename('TI');\nComplete Index Calculation Function:\nfunction calculateIndices(image) {\n  // Normalize reflectance\n  var green = image.select('B3').divide(10000);\n  var red = image.select('B4').divide(10000);\n  var nir = image.select('B8').divide(10000);\n  var swir = image.select('B11').divide(10000);\n  \n  // Calculate FAI\n  var nirPrime = red.add(swir.subtract(red).multiply((833 - 664.5) / (1613.7 - 664.5)));\n  var fai = nir.subtract(nirPrime).rename('FAI');\n  \n  // Calculate TI\n  var ti = red.subtract(green).subtract(nir.subtract(green.multiply(0.5))).rename('TI');\n  \n  // Add bands and apply water mask\n  return image.addBands(fai).addBands(ti).updateMask(waterMaskImage);\n}\n\n\n3.3 Cloud Masking\nClouds have reflectance characteristics in the visible to near-infrared bands that are similar to cyanobacterial blooms, which can result in false positives with high FAI values. Therefore, cloud removal is necessary.\nCloud masking uses two specialized spectral indices: \\(I_1 = \\frac{B1 - B7}{B1 + B7}\\)，A value greater than 0.08 typically indicates thin clouds. \\(I_2 = \\frac{B5 - B4}{B5 + B7}\\)，When \\(I_2\\) is less than 0.1 and \\(I_1\\) is relatively high, it helps identify thin cloud features.\nFirst, thick cloud areas are detected using the characteristic that the reflectance of the red band (B4) is greater than 0.2.\nSecond, thin clouds and shadows are identified using the aerosol band (B1) and red-edge band 3 (B7) index (I1), and the red-edge band 1 (B5) and red band index (I2), by applying the conditions I1 &gt; 0.08 and I2 &lt; 0.1 to exclude these pixels.\nFinally, the thick and thin cloud detection results are combined to generate a comprehensive cloud mask, retaining only cloud-free pixels for subsequent analysis.\nfunction maskCloud(image) {\n  // Normalize reflectance\n  var b1 = image.select('B1').divide(10000); // Aerosol band (442 nm)\n  var b4 = image.select('B4').divide(10000); // Red band (664 nm)\n  var b5 = image.select('B5').divide(10000); // Red-edge 1 band (704 nm)\n  var b7 = image.select('B7').divide(10000); // Red-edge 3 band (782 nm)\n  \n  // Basic cloud mask (B4 &gt; 0.2)\n  var cloudMask = b4.lt(0.2);\n  \n  // Thin cloud/shadow removal\n  var I1 = b1.subtract(b7).divide(b1.add(b7)); // (B1-B7)/(B1+B7)\n  var I2 = b5.subtract(b4).divide(b5.add(b7)); // (B5-B4)/(B5+B7)\n  var thinCloudMask = I1.gt(0.08).and(I2.lt(0.1)).not();\n  \n  // Combined cloud mask\n  return image.updateMask(cloudMask.and(thinCloudMask));\n}\n\n\n3.4 High-Turbidity Water Mask\nHigh-turbidity water bodies (e.g., those with large amounts of sediment or suspended matter) have optical characteristics similar to cyanobacterial blooms, potentially leading to false positives.\nTo eliminate the influence of high-turbidity waters, we apply a mask based on the Turbidity Index (TI).\n// Turbidity mask (TI &gt; 0)\n  var ti = red.subtract(green).subtract(\n    nir.subtract(green).multiply(0.5)\n  ).rename('TI');\nWe use TI &gt; 0 as one of the criteria for distinguishing cyanobacterial blooms, helping to filter out turbid waters not caused by algae. The complete masking process is as follows:\n// Set MNDWI threshold to generate a water mask\nvar waterMask = mndwi.gt(0.1).selfMask(); // MNDWI &gt; 0.1 indicates water\n\n// Convert water mask to vector\nvar waterVector = waterMask.clip(chaohu).reduceToVectors({\n  geometryType: 'polygon',\n  reducer: ee.Reducer.countEvery(),\n  scale: 30,\n  maxPixels: 10e6,\n  bestEffort: true\n});\n\n// Filter out water bodies smaller than the threshold (in square meters)\nvar minArea = 1000000; // Keep water bodies larger than 1,000,000 m²\nvar filteredWater = waterVector.filter(ee.Filter.gte('count', minArea));\n\n// Extract water body boundaries and buffer inward by 20 meters to eliminate edge effects\nvar bufferedWaterOutline = filteredWater.map(function(feature) {\n  return feature.buffer(-20); // Inward buffer of 20 meters\n});\n\n// Create a water mask image for subsequent processing\nvar waterMaskImage = ee.Image().byte().paint({\n  featureCollection: filteredWater,\n  color: 1\n}).clip(chaohu);\nThrough this series of masking operations, we effectively remove clouds, thin clouds, shadows, and highly turbid waters, thereby improving the accuracy of cyanobacterial bloom detection. Specifically, a pixel is marked as a cyanobacterial bloom if it simultaneously satisfies FAI &gt; -0.004 and TI ≤ 0:\nfunction detectAlgae(image) {\n  // Get FAI and TI bands\n  var fai = image.select('FAI');\n  var ti = image.select('TI');\n  \n  // Cyanobacterial bloom condition: FAI &gt; -0.004 and TI ≤ 0\n  var algaeMask = fai.gt(-0.004).and(ti.lte(0));\n  \n  return image.addBands(algaeMask.rename('algae'));\n}\n\nvar s2WithAlgae = s2WithIndices.map(detectAlgae);\n\n\n3.5 Temporal and Spatial Analysis (SDFI)\nWe perform temporal analysis based on daily bloom area calculations.\nThe time series charts help us analyze seasonal patterns of blooms (e.g., frequent occurrences in summer) and interannual trends (e.g., effects of management interventions).\n// Calculate daily cyanobacterial bloom area\nfunction calculateDailyBloomArea(image) {\n  var bloom = image.select('algae');\n  var area = bloom.multiply(ee.Image.pixelArea()).rename('bloom_area');\n  var date = image.date().format('YYYY-MM-dd');\n  \n  return ee.Feature(null, {\n    'date': date,\n    'bloom_area': area,\n    'system:time_start': image.get('system:time_start')\n  });\n}\nvar dailyStats = s2WithAlgae.map(calculateDailyBloomArea);\nTo quantify the spatiotemporal dynamics of cyanobacterial blooms, we introduce the Spatial Distribution Frequency Index (SDFI) for spatial analysis: \\[\n\\text{SDFI} = \\frac{\\sum_{i=1}^{n} R_{i,\\text{bloom}}}{\\sum_{i=1}^{n} R_{i,\\text{bloom}} + \\sum_{i=1}^{n} R_{i,\\text{water}}} \\times 100\\%\n\\] SDFI measures the frequency of cyanobacterial blooms at each geographic location. It describes the percentage of observations during the monitoring period in which a pixel was identified as having a bloom, reflecting the bloom-prone nature of the location.\n// Calculate SDFI\nvar bloomCollection = s2WithAlgae.select('algae');\nvar bloomSum = bloomCollection.sum();\nvar validCount = bloomCollection.count();\nvar sdfi = bloomSum.divide(validCount).multiply(100).rename('SDFI');\nBased on the SDFI results, we can identify high-frequency bloom areas and prioritize them for strengthened management efforts.\n\n\n3.6 Bloom Classification\nBased on FAI values and red band reflectance, we established a cyanobacterial bloom classification system that divides blooms into five levels (VCI_Lv2 to VCI_Lv6), quantifying algal aggregation density and ecological risk.\nfunction classifyBloom(image) {\n  var fai = image.select('FAI');\n  var red = image.select('B4').divide(10000);\n  \n  // Classification criteria\n  var lv2 = fai.gte(-0.004).and(fai.lt(0.1));    \n  var lv3 = fai.gte(0.1).and(fai.lt(0.15));      \n  var lv4 = fai.gte(0.15).and(fai.lt(0.2));      \n  var lv5 = fai.gte(0.2).and(red.lt(0.07));      \n  var lv6 = fai.gte(0.2).and(red.gte(0.07));     \n  \n  return image\n    .addBands(lv2.rename('VCI_Lv2'))\n    .addBands(lv3.rename('VCI_Lv3'))\n    .addBands(lv4.rename('VCI_Lv4'))\n    .addBands(lv5.rename('VCI_Lv5'))\n    .addBands(lv6.rename('VCI_Lv6'));\n}\nvar classified = s2WithAlgae.map(classifyBloom);\n\n\nReferences\n[1]Brooks, B.W., Lazorchak, J.M., Howard, M.D., Johnson, M.V.V., Morton, S.L., Perkins, D.A., Reavie, E.D., Scott, G.I., Smith, S.A. and Steevens, J.A., 2016. Are harmful algal blooms becoming the greatest inland water quality threat to public health and aquatic ecosystems?. Environmental toxicology and chemistry, 35(1), pp.6-13.\n[2]Jing, Y., Zhang, Y., Hu, M., Chu, Q. and Ma, R., 2019. MODIS-satellite-based analysis of long-term temporal-spatial dynamics and drivers of algal blooms in a plateau lake Dianchi, China. Remote Sensing, 11(21), p.2582.\n[3]Guo, H., Liu, H., Lyu, H., Bian, Y., Zhong, S., Li, Y., Miao, S., Yang, Z., Xu, J., Cao, J. and Li, Y., 2022. Is there any difference on cyanobacterial blooms patterns between Lake Chaohu and Lake Taihu over the last 20 years?. Environmental Science and Pollution Research, 29(27), pp.40941-40953.\n[4]Song, T., Xu, C., Yan, F. & Zhang, J. (2025) ‘Spatiotemporal Monitoring of Lake Cyanobacterial Blooms Based on Sentinel-2 Data’, China Environmental Monitoring, 41(1), pp. 214–224 [5]Hu, C., 2009. A novel ocean color index to detect floating algae in the global oceans. Remote Sensing of Environment, 113(10), pp.2118-2129."
  }
]