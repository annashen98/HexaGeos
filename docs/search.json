[
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "",
    "section": "",
    "text": "Use this repository to host a website for your CASA0025 final project by following these stpes:\n\nclone this repository\ninstall quarto\nedit the ‘index.qmd’ file with the contents of your project\nusing terminal, navigate to the project directory and run “quarto render”\npush the changes to your github repository\non github, navigate to Settings&gt;Pages&gt;Build and Deployment. Make sure that under “Source” it says “deploy from branch”. Under “Branch”, select “Main” in the first dropdown and “Docs” under the second drop down. Then press “Save”\n\nYour website should now be available under https://{your_username}.github.io/{your_repo_name}"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "",
    "text": "Harmful algal blooms (HABs), particularly cyanobacterial blooms (CBs), are among the most critical environmental issues facing inland water bodies. These blooms pose significant threats to global public health and aquatic ecosystem stability. Chaohu Lake, the fifth-largest freshwater lake in China, faces severe eutrophication and frequent CBs due to agricultural runoff, industrial, and domestic pollution. Remote sensing technology enables real-time detection and long-term monitoring of CBs. This study focuses on Chaohu Lake as a case study, aiming to quantify and visualize the occurrence of CBs in the region over the past decade, providing insights into the impact of human activities on water quality and ecosystem health.\n\n\nThis application addresses two key research questions: 1. What is the spatial distribution of cyanobacterial blooms (CBs) in Chaohu Lake? 2. What temporal patterns characterize the occurrence of CBs in Chaohu Lake? By leveraging remote sensing technology and indices, the application provides a cost-effective, real-time solution for quantifying and visualizing CB occurrences, enabling a deeper understanding of their spatial and temporal dynamics to inform management strategies.\n\n\n\nThis application is designed to serve environmental researchers, policymakers, local authorities, and residents in the Chaohu Lake region. For researchers, it provides real-time monitoring of cyanobacterial blooms (CBs), offering insights into their spatial distribution and temporal patterns, which are essential for scientific analysis and environmental management. For policymakers and local authorities, the tool enables data-driven decision-making to implement effective mitigation strategies, allocate resources efficiently, and establish long-term action plans to address water quality challenges. For residents, the application raises awareness about water quality issues and associated health risks, empowering communities to take measures and engage in sustainability efforts.\n\n\n\nWhat data are you using?\n\n\n\nHow are you using this data to address the problem?\n\n\n\nHow does your application’s interface work to address the needs of your end user?\n\n\n\n\nReplace the link below with the link to your application.\n\n\n\n\n\n\n\n\n\nIn this part, the code below defines Chaohu Lake’s rectangular study area, centers the map on it, filters Sentinel-2 images within a specific date range and cloud cover threshold, and creates a composite image for analysis.\n// define study area - Chaohu Lake\nvar chaohu = ee.Geometry.Polygon(\n  [[[117.220, 31.799],\n    [117.220, 31.387],\n    [117.937, 31.387],\n    [117.937, 31.799]]]);\n\n\n// set the center\nMap.centerObject(chaohu, 10);\n\n////////////////import data////////////////\n\n// set time range\nvar startDate = '2025-04-01';\nvar endDate = '2025-04-19';\n\n// import Sentinel-2 data and filter\nvar s2 = ee.ImageCollection('COPERNICUS/S2')\n  .filterBounds(chaohu)\n  .filterDate(startDate, endDate)\n  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))\n  \nvar compositeImage = s2.mosaic(); //Synthesize images within the same time period\n\n\n\nFirstly, we need to identify water bodies in Chaohu Lake by calculating the Modified Normalized Difference Water Index(MNDWI), applying a threshold to create a water mask, and then vectorizing the water areas. It filters out small water bodies, retaining larger regions for further analysis. The boundaries of the remaining water features are buffered inward by 20 meters to eliminate edge effects and improve accuracy in the water delineation. This approach is designed to accurately define the lake’s water boundaries for environmental monitoring.\n// calculate MNDWI\n\nvar mndwi = compositeImage.normalizedDifference(['B3', 'B11']).rename('MNDWI');\n\n// set MNDWI threhold\nvar waterMask = mndwi.gt(0.1).selfMask(); // MNDWI &gt; 0.1 represents water\n\n// Convert the water mask into a vector\nvar waterVector = waterMask.clip(chaohu).reduceToVectors({\n  geometryType: 'polygon',\n  reducer: ee.Reducer.countEvery(),\n  scale: 30,\n  maxPixels: 10e6, \n  bestEffort: true   \n});\n\n// filter water area less than the threshold (unit: square meters)\nvar minArea = 1000000; \n\nvar filteredWater = waterVector.filter(ee.Filter.gte('count', minArea)); \n\n\n// Extract the water body boundaries and buffer inward by 20 meters to remove the influence of the water-land interface\nvar bufferedWaterOutline = filteredWater.map(function(feature) {\n  var geometry = feature.geometry();\n  var bufferedGeometry = geometry.buffer(-20); \n  return ee.Feature(bufferedGeometry);\n});\nSecondly, we use FAI index to identify cyanobacterial blooms. The formulas are as follow: \\[ \\Large \\text{FAI} = \\rho_{\\text{nir}} - \\rho'_{\\text{nir}} \\] \\[ \\Large \\rho'_{\\text{nir}} = \\rho_{\\text{red}} + \\left( \\rho_{\\text{swir}} - \\rho_{\\text{red}} \\right) \\times \\frac{833 - 664.5}{1613.7 - 664.5} \\]\nvar calculateFAI = function(image) {\n  // import bands: B4, B8, B11\n  var red = image.select('B4'); // 664 nm\n  var nir = image.select('B8'); // 833 nm\n  var swir = image.select('B11'); // 1613 nm\n  \n  // calculate ρ'nir\n  var nirPrime = red.add(\n    swir.subtract(red).multiply((833 - 664.5) / (1613.7 - 664.5))\n  );\n  \n  // calculate FAI\n  var fai = nir.subtract(nirPrime).rename('FAI');\n  \n  // add FAI as new band\n  return image.addBands(fai).clip(bufferedWaterOutline);\n};\n\n// calculate FAI\nvar s2WithFAI = s2.map(calculateFAI);\n\n// check how many images are there in the time range\nvar imageCount = s2WithFAI.size();\nprint('Number of images is:', imageCount);\n\nif (imageCount.gt(0)) {\n  // calculate average value of FAI band\n  var FAIMean = s2WithFAI.select('FAI').mean();\n} else {\n  print('No images found.');\n}\nYou can include images:\n\n\n\nPixelwise T-Test, 2018\n\n\nand math: \\[ \\Large t = {\\frac{\\overline{x_1}-\\overline{x_2}} {\\sqrt{\\frac{s^2_1}{n_1} + \\frac{s^2_2}{n_2}}}} \\]\n\n\n\n[1]Brooks, B.W., Lazorchak, J.M., Howard, M.D., Johnson, M.V.V., Morton, S.L., Perkins, D.A., Reavie, E.D., Scott, G.I., Smith, S.A. and Steevens, J.A., 2016. Are harmful algal blooms becoming the greatest inland water quality threat to public health and aquatic ecosystems?. Environmental toxicology and chemistry, 35(1), pp.6-13. [2]Jing, Y., Zhang, Y., Hu, M., Chu, Q. and Ma, R., 2019. MODIS-satellite-based analysis of long-term temporal-spatial dynamics and drivers of algal blooms in a plateau lake Dianchi, China. Remote Sensing, 11(21), p.2582. [3]Guo, H., Liu, H., Lyu, H., Bian, Y., Zhong, S., Li, Y., Miao, S., Yang, Z., Xu, J., Cao, J. and Li, Y., 2022. Is there any difference on cyanobacterial blooms patterns between Lake Chaohu and Lake Taihu over the last 20 years?. Environmental Science and Pollution Research, 29(27), pp.40941-40953. [4]Song, T., Xu, C., Yan, F. & Zhang, J. (2025) ‘Spatiotemporal Monitoring of Lake Cyanobacterial Blooms Based on Sentinel-2 Data’, China Environmental Monitoring, 41(1), pp. 214–224 [5]Hu, C., 2009. A novel ocean color index to detect floating algae in the global oceans. Remote Sensing of Environment, 113(10), pp.2118-2129."
  },
  {
    "objectID": "index.html#project-summary",
    "href": "index.html#project-summary",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "",
    "text": "Harmful algal blooms (HABs), particularly cyanobacterial blooms (CBs), are among the most critical environmental issues facing inland water bodies. These blooms pose significant threats to global public health and aquatic ecosystem stability. Chaohu Lake, the fifth-largest freshwater lake in China, faces severe eutrophication and frequent CBs due to agricultural runoff, industrial, and domestic pollution. Remote sensing technology enables real-time detection and long-term monitoring of CBs. This study focuses on Chaohu Lake as a case study, aiming to quantify and visualize the occurrence of CBs in the region over the past decade, providing insights into the impact of human activities on water quality and ecosystem health.\n\n\nThis application addresses two key research questions: 1. What is the spatial distribution of cyanobacterial blooms (CBs) in Chaohu Lake? 2. What temporal patterns characterize the occurrence of CBs in Chaohu Lake? By leveraging remote sensing technology and indices, the application provides a cost-effective, real-time solution for quantifying and visualizing CB occurrences, enabling a deeper understanding of their spatial and temporal dynamics to inform management strategies.\n\n\n\nThis application is designed to serve environmental researchers, policymakers, local authorities, and residents in the Chaohu Lake region. For researchers, it provides real-time monitoring of cyanobacterial blooms (CBs), offering insights into their spatial distribution and temporal patterns, which are essential for scientific analysis and environmental management. For policymakers and local authorities, the tool enables data-driven decision-making to implement effective mitigation strategies, allocate resources efficiently, and establish long-term action plans to address water quality challenges. For residents, the application raises awareness about water quality issues and associated health risks, empowering communities to take measures and engage in sustainability efforts.\n\n\n\nWhat data are you using?\n\n\n\nHow are you using this data to address the problem?\n\n\n\nHow does your application’s interface work to address the needs of your end user?"
  },
  {
    "objectID": "index.html#the-application",
    "href": "index.html#the-application",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "",
    "text": "Replace the link below with the link to your application."
  },
  {
    "objectID": "index.html#how-it-works",
    "href": "index.html#how-it-works",
    "title": "Spatiotemporal Monitoring of Lake Cyanobacterial Blooms: A Case Study of Chaohu Lake",
    "section": "",
    "text": "In this part, the code below defines Chaohu Lake’s rectangular study area, centers the map on it, filters Sentinel-2 images within a specific date range and cloud cover threshold, and creates a composite image for analysis.\n// define study area - Chaohu Lake\nvar chaohu = ee.Geometry.Polygon(\n  [[[117.220, 31.799],\n    [117.220, 31.387],\n    [117.937, 31.387],\n    [117.937, 31.799]]]);\n\n\n// set the center\nMap.centerObject(chaohu, 10);\n\n////////////////import data////////////////\n\n// set time range\nvar startDate = '2025-04-01';\nvar endDate = '2025-04-19';\n\n// import Sentinel-2 data and filter\nvar s2 = ee.ImageCollection('COPERNICUS/S2')\n  .filterBounds(chaohu)\n  .filterDate(startDate, endDate)\n  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))\n  \nvar compositeImage = s2.mosaic(); //Synthesize images within the same time period\n\n\n\nFirstly, we need to identify water bodies in Chaohu Lake by calculating the Modified Normalized Difference Water Index(MNDWI), applying a threshold to create a water mask, and then vectorizing the water areas. It filters out small water bodies, retaining larger regions for further analysis. The boundaries of the remaining water features are buffered inward by 20 meters to eliminate edge effects and improve accuracy in the water delineation. This approach is designed to accurately define the lake’s water boundaries for environmental monitoring.\n// calculate MNDWI\n\nvar mndwi = compositeImage.normalizedDifference(['B3', 'B11']).rename('MNDWI');\n\n// set MNDWI threhold\nvar waterMask = mndwi.gt(0.1).selfMask(); // MNDWI &gt; 0.1 represents water\n\n// Convert the water mask into a vector\nvar waterVector = waterMask.clip(chaohu).reduceToVectors({\n  geometryType: 'polygon',\n  reducer: ee.Reducer.countEvery(),\n  scale: 30,\n  maxPixels: 10e6, \n  bestEffort: true   \n});\n\n// filter water area less than the threshold (unit: square meters)\nvar minArea = 1000000; \n\nvar filteredWater = waterVector.filter(ee.Filter.gte('count', minArea)); \n\n\n// Extract the water body boundaries and buffer inward by 20 meters to remove the influence of the water-land interface\nvar bufferedWaterOutline = filteredWater.map(function(feature) {\n  var geometry = feature.geometry();\n  var bufferedGeometry = geometry.buffer(-20); \n  return ee.Feature(bufferedGeometry);\n});\nSecondly, we use FAI index to identify cyanobacterial blooms. The formulas are as follow: \\[ \\Large \\text{FAI} = \\rho_{\\text{nir}} - \\rho'_{\\text{nir}} \\] \\[ \\Large \\rho'_{\\text{nir}} = \\rho_{\\text{red}} + \\left( \\rho_{\\text{swir}} - \\rho_{\\text{red}} \\right) \\times \\frac{833 - 664.5}{1613.7 - 664.5} \\]\nvar calculateFAI = function(image) {\n  // import bands: B4, B8, B11\n  var red = image.select('B4'); // 664 nm\n  var nir = image.select('B8'); // 833 nm\n  var swir = image.select('B11'); // 1613 nm\n  \n  // calculate ρ'nir\n  var nirPrime = red.add(\n    swir.subtract(red).multiply((833 - 664.5) / (1613.7 - 664.5))\n  );\n  \n  // calculate FAI\n  var fai = nir.subtract(nirPrime).rename('FAI');\n  \n  // add FAI as new band\n  return image.addBands(fai).clip(bufferedWaterOutline);\n};\n\n// calculate FAI\nvar s2WithFAI = s2.map(calculateFAI);\n\n// check how many images are there in the time range\nvar imageCount = s2WithFAI.size();\nprint('Number of images is:', imageCount);\n\nif (imageCount.gt(0)) {\n  // calculate average value of FAI band\n  var FAIMean = s2WithFAI.select('FAI').mean();\n} else {\n  print('No images found.');\n}\nYou can include images:\n\n\n\nPixelwise T-Test, 2018\n\n\nand math: \\[ \\Large t = {\\frac{\\overline{x_1}-\\overline{x_2}} {\\sqrt{\\frac{s^2_1}{n_1} + \\frac{s^2_2}{n_2}}}} \\]\n\n\n\n[1]Brooks, B.W., Lazorchak, J.M., Howard, M.D., Johnson, M.V.V., Morton, S.L., Perkins, D.A., Reavie, E.D., Scott, G.I., Smith, S.A. and Steevens, J.A., 2016. Are harmful algal blooms becoming the greatest inland water quality threat to public health and aquatic ecosystems?. Environmental toxicology and chemistry, 35(1), pp.6-13. [2]Jing, Y., Zhang, Y., Hu, M., Chu, Q. and Ma, R., 2019. MODIS-satellite-based analysis of long-term temporal-spatial dynamics and drivers of algal blooms in a plateau lake Dianchi, China. Remote Sensing, 11(21), p.2582. [3]Guo, H., Liu, H., Lyu, H., Bian, Y., Zhong, S., Li, Y., Miao, S., Yang, Z., Xu, J., Cao, J. and Li, Y., 2022. Is there any difference on cyanobacterial blooms patterns between Lake Chaohu and Lake Taihu over the last 20 years?. Environmental Science and Pollution Research, 29(27), pp.40941-40953. [4]Song, T., Xu, C., Yan, F. & Zhang, J. (2025) ‘Spatiotemporal Monitoring of Lake Cyanobacterial Blooms Based on Sentinel-2 Data’, China Environmental Monitoring, 41(1), pp. 214–224 [5]Hu, C., 2009. A novel ocean color index to detect floating algae in the global oceans. Remote Sensing of Environment, 113(10), pp.2118-2129."
  }
]